<?xml version="1.0" encoding="UTF-8"?>

<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. -->

<!-- Note: A "Server" is not itself a "Container", so you may not define subcomponents such as "Valves" at this level. Documentation at /docs/config/server.html -->

-<Server shutdown="SHUTDOWN" port="7061">

<Listener className="org.apache.catalina.startup.VersionLoggerListener"/>

<!-- Security listener. Documentation at /docs/config/listeners.html <Listener className="org.apache.catalina.security.SecurityListener" /> -->


<!--APR library loader. Documentation at /docs/apr.html -->


<Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on"/>

<!-- Prevent memory leaks due to use of particular java/javax APIs-->


<Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener"/>

<Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener"/>

<Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener"/>

<!-- Global JNDI resources Documentation at /docs/jndi-resources-howto.html -->



-<GlobalNamingResources>

<!-- Editable user database that can also be used by UserDatabaseRealm to authenticate users -->


<Resource pathname="conf/tomcat-users.xml" factory="org.apache.catalina.users.MemoryUserDatabaseFactory" description="User database that can be updated and saved" type="org.apache.catalina.UserDatabase" auth="Container" name="UserDatabase"/>

<Resource factory="com.siemens.compas.db.compassecurity.EncryptedNewDataSourceFactory" type="javax.sql.DataSource" auth="Container" name="jdbc/catMaster" validationQuery="select 1" username="7b3eb29b86178b0ffdf0ed2d40dc6b10" url="jdbc:jtds:sqlserver://compas-qa02-rds.cgn22lbpg2us.us-east-1.rds.amazonaws.com:1433/CVCMaster_R12B_NQ2;sendStringParametersAsUnicode=false" password="a6b93c0540dd917f0ae6933b93f06a21" maxIdle="4" maxTotal="75" driverClassName="net.sourceforge.jtds.jdbc.Driver"/>

<Resource factory="com.siemens.compas.db.compassecurity.EncryptedNewDataSourceFactory" type="javax.sql.DataSource" auth="Container" name="jdbc/catUser" validationQuery="select 1" username="7b3eb29b86178b0ffdf0ed2d40dc6b10" url="jdbc:jtds:sqlserver://compas-qa02-rds.cgn22lbpg2us.us-east-1.rds.amazonaws.com:1433/CVCUser_R12B_NQ2_NEW;sendStringParametersAsUnicode=false" password="a6b93c0540dd917f0ae6933b93f06a21" maxIdle="4" maxTotal="75" driverClassName="net.sourceforge.jtds.jdbc.Driver"/>

<Resource factory="com.siemens.compas.db.compassecurity.EncryptedNewDataSourceFactory" type="javax.sql.DataSource" auth="Container" name="jdbc/catAdmin" validationQuery="select 1" username="7b3eb29b86178b0ffdf0ed2d40dc6b10" url="jdbc:jtds:sqlserver://compas-qa02-rds.cgn22lbpg2us.us-east-1.rds.amazonaws.com:1433/CVCAdmin_R12B_NQ2;sendStringParametersAsUnicode=false" password="a6b93c0540dd917f0ae6933b93f06a21" maxIdle="4" maxTotal="75" driverClassName="net.sourceforge.jtds.jdbc.Driver"/>

<Resource factory="com.siemens.compas.db.compassecurity.EncryptedNewDataSourceFactory" type="javax.sql.DataSource" auth="Container" name="jdbc/catAMS" validationQuery="select 1" username="7b3eb29b86178b0ffdf0ed2d40dc6b10" url="jdbc:jtds:sqlserver://compas-qa02-rds.cgn22lbpg2us.us-east-1.rds.amazonaws.com:1433/CVCAMSErrorLog_R12B_NQ2;sendStringParametersAsUnicode=false" password="a6b93c0540dd917f0ae6933b93f06a21" maxIdle="4" maxTotal="50" driverClassName="net.sourceforge.jtds.jdbc.Driver"/>

<Resource factory="com.siemens.compas.db.compassecurity.EncryptedNewDataSourceFactory" type="javax.sql.DataSource" auth="Container" name="jdbc/catAudit" validationQuery="select 1" username="7b3eb29b86178b0ffdf0ed2d40dc6b10" url="jdbc:jtds:sqlserver://compas-qa02-rds.cgn22lbpg2us.us-east-1.rds.amazonaws.com:1433/COMPAS_AuditTrail_NQ2;sendStringParametersAsUnicode=false" password="a6b93c0540dd917f0ae6933b93f06a21" maxIdle="4" maxTotal="75" driverClassName="net.sourceforge.jtds.jdbc.Driver"/>

</GlobalNamingResources>

<!-- A "Service" is a collection of one or more "Connectors" that share a single "Container" Note: A "Service" is not itself a "Container", so you may not define subcomponents such as "Valves" at this level. Documentation at /docs/config/service.html -->



-<Service name="Catalina">

<!--The connectors can use a shared executor, you can define one or more named thread pools-->


<!-- <Executor name="tomcatThreadPool" namePrefix="catalina-exec-" maxThreads="150" minSpareThreads="4"/> -->


<!-- A "Connector" represents an endpoint by which requests are received and responses are returned. Documentation at : Java HTTP Connector: /docs/config/http.html (blocking & non-blocking) Java AJP Connector: /docs/config/ajp.html APR (HTTP/AJP) Connector: /docs/apr.html Define a non-SSL/TLS HTTP/1.1 Connector on port 8061 -->


<Connector port="8061" compressableMimeType="text/html,text/xml,text/plain,text/css,text/javascript,application/xml,text/json,application/x-javascript,application/javascript,application/json" noCompressionUserAgents="gozilla, traviata" compressionMinSize="2048" compression="on" tcpNoDelay="true" enableLookups="false" maxPostSize="-1" acceptCount="100" maxThreads="200" redirectPort="8443" connectionTimeout="20000" protocol="HTTP/1.1"/>

<!-- A "Connector" using the shared thread pool-->


<!-- <Connector executor="tomcatThreadPool" port="8061" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" /> -->


<!-- Define a SSL/TLS HTTP/1.1 Connector on port 8443 This connector uses the NIO implementation that requires the JSSE style configuration. When using the APR/native implementation, the OpenSSL style configuration is required as described in the APR/native documentation -->


<!-- <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol" maxThreads="150" SSLEnabled="true" scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" /> -->


<!-- Define an AJP 1.3 Connector on port 9061 -->


<Connector port="9061" redirectPort="8443" protocol="AJP/1.3"/>

<!-- An Engine represents the entry point (within Catalina) that processes every request. The Engine implementation for Tomcat stand alone analyzes the HTTP headers included with the request, and passes them on to the appropriate Host (virtual host). Documentation at /docs/config/engine.html -->


<!-- You should set jvmRoute to support load-balancing via AJP ie : <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1"> -->



-<Engine name="Catalina" defaultHost="localhost">

<!--For clustering, please take a look at documentation at: /docs/cluster-howto.html (simple how to) /docs/config/cluster.html (reference documentation) -->


<!-- <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/> -->


<!-- Use the LockOutRealm to prevent attempts to guess user passwords via a brute-force attack -->



-<Realm className="org.apache.catalina.realm.LockOutRealm">

<!-- This Realm uses the UserDatabase configured in the global JNDI resources under the key "UserDatabase". Any edits that are performed against this UserDatabase are immediately available for use by the Realm. -->


<Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase"/>

</Realm>


-<Host name="localhost" autoDeploy="true" unpackWARs="true" appBase="webapps">

<!-- SingleSignOn valve, share authentication between web applications Documentation at: /docs/config/valve.html -->


<!-- <Valve className="org.apache.catalina.authenticator.SingleSignOn" /> -->


<!-- Access log processes all example. Documentation at: /docs/config/valve.html Note: The pattern used is equivalent to using pattern="common" -->


<Valve className="org.apache.catalina.valves.AccessLogValve" pattern="%h %l %u %t "%r" %s %b" suffix=".txt" prefix="localhost_access_log" directory="logs"/>

</Host>

</Engine>

</Service>

</Server>
